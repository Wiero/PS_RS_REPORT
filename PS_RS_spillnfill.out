\BOOKMARK [0][-]{chapter.1}{Aufgabenstellung}{}% 1
\BOOKMARK [0][-]{chapter.2}{Grundlagen}{}% 2
\BOOKMARK [1][-]{section.2.1}{AMIDAR }{chapter.2}% 3
\BOOKMARK [2][-]{subsection.2.1.1}{Lokale Variablen und Operanden in Java}{section.2.1}% 4
\BOOKMARK [2][-]{subsection.2.1.2}{Framestack}{section.2.1}% 5
\BOOKMARK [1][-]{section.2.2}{Spill and Fill}{chapter.2}% 6
\BOOKMARK [1][-]{section.2.3}{Verwendung eines Spill and Fill Mechanismus in anderen Prozessoren}{chapter.2}% 7
\BOOKMARK [2][-]{subsection.2.3.1}{Sun Sparc Prozessoren}{section.2.3}% 8
\BOOKMARK [0][-]{chapter.3}{Implementierung}{}% 9
\BOOKMARK [1][-]{section.3.1}{\334bersicht \374ber den AMIDAR FRAMESTACK}{chapter.3}% 10
\BOOKMARK [1][-]{section.3.2}{DRAM Anbindung \374ber AXI}{chapter.3}% 11
\BOOKMARK [2][-]{subsection.3.2.1}{Addressbereich des Framestacks im Hauptspeicher}{section.3.2}% 12
\BOOKMARK [2][-]{subsection.3.2.2}{Schreiben von Framestackinhalten in den Hauptspeicher}{section.3.2}% 13
\BOOKMARK [2][-]{subsection.3.2.3}{Lesen von Framestackinhalten aus den Hauptspeicher}{section.3.2}% 14
\BOOKMARK [1][-]{section.3.3}{Spill and Fill Windows}{chapter.3}% 15
\BOOKMARK [1][-]{section.3.4}{Framestackteile des aktiven Threads auslagern \(Spill\)}{chapter.3}% 16
\BOOKMARK [2][-]{subsection.3.4.1}{\334berpr\374fen des freien Speichers im Window}{section.3.4}% 17
\BOOKMARK [2][-]{subsection.3.4.2}{Spill}{section.3.4}% 18
\BOOKMARK [1][-]{section.3.5}{Ausgelagerte Framestackteile des aktiven Threads wiederherstellen \(Fill\)}{chapter.3}% 19
\BOOKMARK [2][-]{subsection.3.5.1}{Ablauf eines return Vorgangs mit fill}{section.3.5}% 20
\BOOKMARK [2][-]{subsection.3.5.2}{Ablauf des Fill Vorgangs}{section.3.5}% 21
\BOOKMARK [1][-]{section.3.6}{Multithreading mit Verdr\344ngung}{chapter.3}% 22
\BOOKMARK [2][-]{subsection.3.6.1}{Zuordnung von Threads zu den Windows}{section.3.6}% 23
\BOOKMARK [2][-]{subsection.3.6.2}{\304nderungen am der Threaderzeugung}{section.3.6}% 24
\BOOKMARK [2][-]{subsection.3.6.3}{Threadwechsel}{section.3.6}% 25
\BOOKMARK [1][-]{section.3.7}{Garbage Collector Interface}{chapter.3}% 26
\BOOKMARK [1][-]{section.3.8}{Lesezugriff Wishbone}{chapter.3}% 27
\BOOKMARK [0][-]{chapter.4}{Evaluation}{}% 28
\BOOKMARK [1][-]{section.4.1}{Testumgebung}{chapter.4}% 29
\BOOKMARK [2][-]{subsection.4.1.1}{Hardware\344nderungen zur Performance Evaluation}{section.4.1}% 30
\BOOKMARK [2][-]{subsection.4.1.2}{angepasste Testbench}{section.4.1}% 31
\BOOKMARK [1][-]{section.4.2}{Performance Messungen}{chapter.4}% 32
\BOOKMARK [2][-]{subsection.4.2.1}{Spill and Fill}{section.4.2}% 33
\BOOKMARK [2][-]{subsection.4.2.2}{Threadswitch}{section.4.2}% 34
\BOOKMARK [0][-]{chapter.5}{Fazit}{}% 35
\BOOKMARK [1][-]{section.5.1}{Ausblick}{chapter.5}% 36
\BOOKMARK [0][-]{chapter.6}{Literaturverzeichnis}{}% 37
\BOOKMARK [0][-]{section*.26}{Abbildungsverzeichnis}{}% 38
